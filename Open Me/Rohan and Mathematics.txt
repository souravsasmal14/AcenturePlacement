Rohan enjoys mathematics and has a few favorite numbers. Therefore rohan prefers positive integers whose sole lucky digits in the decimal notation are 4 and 7.  For instance, lucky numbers are 47, 744, 4 whereas unlucky numbers are 5, 17, 467. if a number can be divided evenly by a lucky number, rohan considers it to be almost lucky.  He needs our assistance to determine whether the supplied number N is nearly lucky , code it in c++ and with proper explanation

Explanation:

We define an array luckyNumbers that contains all the lucky numbers Rohan considers.

We create a function isAlmostLucky that takes an integer N as input and checks if N is divisible by any lucky number from the luckyNumbers array. It iterates through the array and checks if N % luckyNumbers[i] equals zero. If it does, it returns true, indicating that N is almost lucky. Otherwise, it returns false.

In the main function, we take input for the number N and then call the isAlmostLucky function to check if it's almost lucky.

Finally, we print the result based on the return value of isAlmostLucky.

Compile and run this C++ program, and it will tell you whether the supplied number N is almost lucky according to Rohan's criteria.


#include <iostream>
using namespace std;

// Function to check if a number is almost lucky
bool isAlmostLucky(int N) {
    int luckyNumbers[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};
    // List of lucky numbers

    for (int i = 0; i < sizeof(luckyNumbers) / sizeof(luckyNumbers[0]); i++) {
        if (N % luckyNumbers[i] == 0) {
            return true; // N is divisible by a lucky number
        }
    }

    return false; // N is not divisible by any lucky number
}

int main() {
    int N;
    cout << "Enter a number: ";
    cin >> N;

    if (isAlmostLucky(N)) {
        cout << N << " is almost lucky!" << endl;
    } else {
        cout << N << " is not almost lucky." << endl;
    }

    return 0;
}
